object frmpyinput: Tfrmpyinput
  Left = 0
  Top = 0
  BorderIcons = [biSystemMenu, biMinimize]
  BorderStyle = bsSingle
  Caption = 'Python Input'
  ClientHeight = 308
  ClientWidth = 771
  Color = clBtnFace
  Font.Charset = DEFAULT_CHARSET
  Font.Color = clWindowText
  Font.Height = -11
  Font.Name = 'Tahoma'
  Font.Style = []
  Position = poScreenCenter
  TextHeight = 13
  object mmopythoninput: TMemo
    Left = 8
    Top = 8
    Width = 371
    Height = 292
    BevelKind = bkFlat
    BorderStyle = bsNone
    Lines.Strings = (
      'import requests'
      'import json'
      'import time'
      ''
      ''
      '       '
      ''
      '   ')
    ReadOnly = True
    ScrollBars = ssBoth
    TabOrder = 0
  end
  object mmopart2: TMemo
    Left = 392
    Top = 8
    Width = 371
    Height = 292
    Lines.Strings = (
      
        ',  # Add your PLID values here as strings (e.g., '#39'68577960'#39', ...' +
        ')'
      '    ]'
      'def make_api_request():'
      '    # Manually add the PLID values to process'
      ''
      ''
      ' for plid in buy_box_values:'
      '        url = ('
      
        '            "https://api.takealot.com/rest/v-1-10-0/product-deta' +
        'ils/PLID"'
      '            + plid'
      '            + "?uuid=-696061645&platform=desktop"'
      '        )'
      ''
      '        headers = {'
      
        '            "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; ' +
        'x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.93 ' +
        'Safari/537.36"'
      '        }'
      ''
      '        options = {'
      '            "method": "GET",'
      '            "headers": headers,'
      '            "muteHttpExceptions": True  # Mute HTTP exceptions'
      '        }'
      ''
      '        response = requests.get(url, headers=headers)'
      '        responseData = response.content.decode("utf-8")'
      ''
      '        try:'
      '            json_data = json.loads(responseData)'
      '            print(responseData)'
      ''
      '            seller_detail = json_data.get("seller_detail")'
      '            event_data = json_data.get("event_data")'
      '            desktop_href = json_data.get("desktop_href")'
      ''
      
        '            if seller_detail is not None and desktop_href is not' +
        ' None:'
      '                print(seller_detail)'
      '                print(desktop_href)'
      ''
      
        '                if event_data is not None and "documents" in eve' +
        'nt_data:'
      '                    documents = event_data['#39'documents'#39']'
      '                    if "product" in documents:'
      '                        product = documents['#39'product'#39']'
      
        '                        purchase_price = product.get('#39'purchase_p' +
        'rice'#39')'
      '                        print("R: " + str(purchase_price))'
      '                    else:'
      
        '                        print("Missing '#39'product'#39' data in the JSO' +
        'N response.")'
      '                else:'
      
        '                    print("Missing '#39'documents'#39' data in the JSON ' +
        'response.")'
      ''
      '                # Retrieve the display_name'
      '                if seller_detail is not None:'
      
        '                    display_name = seller_detail.get("display_na' +
        'me")'
      '                    print("Seller: " + str(display_name))'
      '                else:'
      
        '                    print("Missing '#39'seller_detail'#39' data in the J' +
        'SON response.")'
      ''
      '            else:'
      '                print("Missing data in the JSON response.")'
      ''
      '        except json.JSONDecodeError as error:'
      '            print("Error parsing JSON: " + str(error))'
      '            print("Response content:", responseData)'
      ''
      '        # Delay for 5 seconds before the next API request'
      '        time.sleep(2)'
      ''
      '     #print("Process completed successfully.")'
      ''
      'make_api_request()')
    ScrollBars = ssBoth
    TabOrder = 1
  end
end
